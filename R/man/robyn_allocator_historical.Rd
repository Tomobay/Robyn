% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allocator.R
\name{robyn_allocator_historical}
\alias{robyn_allocator_historical}
\title{\code{robyn_allocator_historical()} function returns a new split of media
variable spends that maximizes the total media response.}
\usage{
robyn_allocator_historical(
  new_budget_ratio = 1,
  channels,
  channel_constr_low = 1,
  channel_constr_up = 1,
  InputCollect,
  OutputCollect,
  select_model,
  date_min = NULL,
  date_max = NULL
)
}
\arguments{
\item{new_budget_ratio}{numeric. Value which you want to increase or decrease 
from current budget. deafult 1}

\item{channels}{channels to optimize}

\item{channel_constr_low, channel_constr_up}{Numeric vectors. The lower and upper bounds
for each paid media variable when maximizing total media response. For example,
\code{channel_constr_low = 0.7} means minimum spend of the variable is 70% of historical
average, using non-zero spend values, within \code{date_min} and \code{date_max} date range.
Both constrains must be length 1 (same for all values) OR same length and order as
\code{paid_media_spends}. It's not recommended to 'exaggerate' upper bounds, especially
if the new level is way higher than historical level. Lower bound must be >=0.01,
and upper bound should be < 5.}

\item{InputCollect}{List. Contains all input parameters for the model.
Required when \code{robyn_object} is not provided.}

\item{OutputCollect}{List. Containing all model result.
Required when \code{robyn_object} is not provided.}

\item{select_model}{Character. A model \code{SolID}. When \code{robyn_object}
is provided, \code{select_model} defaults to the already selected \code{SolID}. When
\code{robyn_object} is not provided, \code{select_model} must be provided with
\code{InputCollect} and \code{OutputCollect}, and must be one of
\code{OutputCollect$allSolutions}.}

\item{date_min, date_max}{Character/Date. Date range to calculate mean (of non-zero
spends) and total spends. Default will consider all dates within modeled window.
Length must be 1 for both parameters.}
}
\value{
A list object containing allocator result.
fit: solnp output
optim_result: optimized share
expected_spend_total: optimized expected spend
init_spend_total: initial spend 
original_expected_spend_toal: expected spend with current spend share
expected_return: optimized expected return
init_return" initial return
original_expected_return: expected return with current spend share
}
\description{
Using daily, weekly, 
and monthly granularity data, the optimization is performed to set all costs 
used in the period are the same. If the cost of channel Facebook is set at 
120\\%, the optimization method would set the cost of channel Facebook for the 
entire period at 120\\% for each level of granularity. This is helpful in 
determining annual budgets and other long term budgets
}
\examples{
\dontrun{robyn_allocator_historical(
new_budget_ratio = 0.6, # new budget
channels, # channels to optimize
channel_constr_low = 0.5, # lower band
channel_constr_up = 1, # upper band
InputCollect, # Input Collect
OutputCollect, # OutputCollect
select_model, # selected_model
date_min = date_min, # starting date to optimize
date_max = date_max # end date to optimize
)}
}
